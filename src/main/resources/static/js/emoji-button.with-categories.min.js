
/*! Emoji Button - UMD Bundle with Categories and Filtering */
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global.EmojiButton = factory());
}(this, (function () {
  class EmojiButton {
    constructor(options) {
      this.options = options || {};
      this._visible = false;
      this._initPicker();
    }

    _initPicker() {
      this._picker = document.createElement('div');
      this._picker.style.position = 'absolute';
      this._picker.style.zIndex = 9999;
      this._picker.style.border = '1px solid #ccc';
      this._picker.style.padding = '10px';
      this._picker.style.background = '#fff';
      this._picker.style.boxShadow = '0 2px 6px rgba(0,0,0,0.2)';
      this._picker.style.borderRadius = '8px';
      this._picker.style.maxWidth = '300px';
      this._picker.style.minWidth = '260px';
      this._picker.style.display = 'flex';
      this._picker.style.flexDirection = 'column';
      this._picker.style.fontFamily = 'sans-serif';

      // Tab Buttons
const tabContainer = document.createElement('div');
tabContainer.style.display = 'flex';
tabContainer.style.justifyContent = 'flex-start';
tabContainer.style.gap = '4px';
tabContainer.style.marginBottom = '6px';

const smileyTab = document.createElement('button');
smileyTab.textContent = '😊';
smileyTab.style.width = '32px';
smileyTab.style.height = '32px';
smileyTab.style.cursor = 'pointer';
smileyTab.style.border = '1px solid #ddd';
smileyTab.style.background = '#f0f0f0';
smileyTab.style.fontSize = '16px';
smileyTab.style.flex = 'none';
smileyTab.style.padding = '0';

const animalTab = document.createElement('button');
animalTab.textContent = '🐶';
animalTab.style.width = '32px';
animalTab.style.height = '32px';
animalTab.style.cursor = 'pointer';
animalTab.style.border = '1px solid #ddd';
animalTab.style.background = '#f0f0f0';
animalTab.style.fontSize = '16px';
animalTab.style.flex = 'none';
animalTab.style.padding = '0';

      tabContainer.appendChild(smileyTab);
      tabContainer.appendChild(animalTab);

      // Close button
      const closeBtn = document.createElement('div');
      closeBtn.textContent = '❌';
      closeBtn.style.position = 'absolute';
      closeBtn.style.top = '5px';
      closeBtn.style.right = '8px';
      closeBtn.style.cursor = 'pointer';
      closeBtn.title = '닫기';
      closeBtn.addEventListener('click', () => this.hidePicker());

      // Emoji Grid
      this._emojiGrid = document.createElement('div');
      this._emojiGrid.style.display = 'flex';
      this._emojiGrid.style.flexWrap = 'wrap';
      this._emojiGrid.style.marginTop = '10px';
      this._emojiGrid.style.maxHeight = '200px';
      this._emojiGrid.style.overflowY = 'auto';

      // Emoji data
      this._emojiData = {
        smileys: '😀 😃 😄 😁 😆 😅 😂 🤣 😊 😇 🙂 🙃 😉 😌 😍 🥰 😘 😗 😙 😚 😋 😛 😝 😜 🤪 🤩 🥳 😏 😒 😞 😔 😕 🙁 ☹️'.split(' '),
        animals: '🐶 🐱 🐭 🐹 🐰 🦊 🐻 🐼 🐨 🐯 🦁 🐮 🐷 🐽 🐸 🐵 🙈 🙉 🙊'.split(' ')
      };

      smileyTab.addEventListener('click', () => this._renderEmojis('smileys'));
      animalTab.addEventListener('click', () => this._renderEmojis('animals'));

      this._picker.appendChild(tabContainer);
      this._picker.appendChild(closeBtn);
      this._picker.appendChild(this._emojiGrid);

      // Default render
      this._renderEmojis('smileys');
    }

    _renderEmojis(category) {
      this._emojiGrid.innerHTML = '';
      this._emojiData[category].forEach(emoji => {
        const span = document.createElement('span');
        span.textContent = emoji;
        span.style.fontSize = '22px';
        span.style.cursor = 'pointer';
        span.style.margin = '4px';
        span.className = 'emoji-button-emoji';
        this._emojiGrid.appendChild(span);
      });
    }

    on(event, callback) {
      if (event === 'emoji') {
        this._picker.addEventListener('click', e => {
          if (e.target && e.target.classList.contains('emoji-button-emoji')) {
            callback(e.target.textContent.trim());
          }
        });
      }
    }

    togglePicker(trigger) {
      if (this._visible) {
        this.hidePicker();
      } else {
        const rect = trigger.getBoundingClientRect();
        this._picker.style.top = `${rect.bottom + window.scrollY}px`;
        this._picker.style.left = `${rect.left + window.scrollX}px`;
        document.body.appendChild(this._picker);
        this._visible = true;
      }
    }

    hidePicker() {
      if (this._visible && this._picker.parentNode) {
        document.body.removeChild(this._picker);
        this._visible = false;
      }
    }
  }

  return EmojiButton;
})));
